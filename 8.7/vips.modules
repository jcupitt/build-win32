<?xml version="1.0"?>
<!DOCTYPE moduleset SYSTEM "moduleset.dtd">
<?xml-stylesheet type="text/xsl" href="moduleset.xsl"?>
<moduleset>

<!-- git repos -->
<repository type="git" name="git.gnome.org" default="yes"
    href="git://git.gnome.org/"/>
<repository type="git" name="git.freedesktop.org"
    href="git://anongit.freedesktop.org/"/>
<repository type="git" name="gstreamer.freedesktop.org"
    href="git://anongit.freedesktop.org/gstreamer/"/>
<repository type="git" name="telepathy.freedesktop.org"
    href="git://anongit.freedesktop.org/telepathy/"/>
<repository type="git" name="wayland.freedesktop.org"
    href="git://anongit.freedesktop.org/git/wayland"/>
<repository type="git" name="xorg.freedesktop.org"
    href="git://anongit.freedesktop.org/git/xorg"/>
<repository type="git" name="github.com"
    href="git://github.com/"/>
<repository type="bzr" name="research.operationaldynamics.com"
    href="http://research.operationaldynamics.com/bzr"/>
<repository type="git" name="linuxwacom.git.sourceforge.net"
    href="git://linuxwacom.git.sourceforge.net/"/>
<repository type="git" name="quvi"
    href="git://repo.or.cz/"/>

<!-- tarball repos -->
<repository type="tarball" name="cairo.org"
    href="http://cairographics.org/"/>
<repository type="tarball" name="iso-codes"
    href="http://pkg-isocodes.alioth.debian.org/downloads/"/>
<repository type="tarball" name="sourceforge.net"
    href="http://sourceforge.net/projects/"/>
<repository type="tarball" name="webkitgtk.org"
    href="http://webkitgtk.org/releases/"/>
<repository type="tarball" name="freedesktop.org"
    href="http://freedesktop.org/software/"/>
<repository type="tarball" name="people.freedesktop.org"
    href="http://people.freedesktop.org/"/>
<repository type="tarball" name="icon-theme.freedesktop.org"
    href="http://icon-theme.freedesktop.org/releases/"/>
<repository type="tarball" name="nice.freedesktop.org"
    href="http://nice.freedesktop.org/releases/"/>
<repository type="tarball" name="libpwquality"
    href="https://fedorahosted.org/releases/l/i/libpwquality/"/>
<repository type="tarball" name="ftp.mozilla.org"
      href="http://ftp.mozilla.org/"/>
<repository type="tarball" name="kernel.org"
      href="http://www.kernel.org"/>
<repository type="tarball" name="ftp.gnu.org"
    href="http://ftp.gnu.org/gnu/"/>
<repository type="tarball" name="libndp"
    href="http://libndp.org/files/"/>
<repository type="tarball" name="mir"
    href="https://launchpad.net/mir/"/>
<repository type="tarball" name="xorg-tar"
    href="http://xorg.freedesktop.org/"/>
<repository type="tarball" name="github-tar"
    href="https://github.com/"/>
<repository type="tarball" name="libxkbcommon"
    href="http://xkbcommon.org/download/"/>
<repository type="tarball" name="poppler.freedesktop.org"
    href="http://poppler.freedesktop.org/"/>

  <repository 
    type="tarball"
    name="tiff"
    href="http://download.osgeo.org/libtiff/"
  />

  <repository
    type="tarball"
    name="xmlsoft"
    href="ftp://xmlsoft.org/"
  />

  <repository 
    type="tarball"
    name="vips"
    href="https://github.com/jcupitt/libvips/releases/download/"
  />

  <repository 
    type="tarball"
    name="nip2"
    href="https://github.com/jcupitt/nip2/releases/download/"
  />

  <repository 
    type="tarball" 
    name="cairo" 
    href="http://www.cairographics.org/releases/"
    />

  <repository 
    type="tarball"
    name="sourceware"
    href="ftp://sourceware.org/pub/"
  />

  <repository 
    type="tarball"
    name="orc"
    href="http://code.entropywave.com/download/orc/"
  />

  <repository 
    type="tarball"
    name="cam"
    href="ftp://ftp.csx.cam.ac.uk/pub/software/programming/"
  />

  <repository 
    type="tarball"
    name="graphviz"
    href="http://www.graphviz.org/pub/graphviz/stable/SOURCES/"
  />

  <repository 
    type="tarball"
    name="cfitsio"
    href="http://heasarc.gsfc.nasa.gov/FTP/software/fitsio/c/"
  />

  <repository 
    type="tarball"
    name="fcgi"
    href="http://www.fastcgi.com/dist/"
  />

  <repository 
    type="tarball"
    name="fftw"
    href="http://www.fftw.org/"
  />

  <repository 
    type="tarball" 
    name="sourceforge" 
    href="http://downloads.sourceforge.net/sourceforge/"
  />

  <repository 
    type="tarball" 
    name="nongnu" 
    href="http://download.savannah.nongnu.org/releases/"
  />

  <repository 
    type="tarball" 
    name="magick" 
    href="ftp://ftp.imagemagick.org/pub/ImageMagick/releases/"
  />

  <repository 
    type="tarball" 
    name="jpeg" 
    href="http://www.ijg.org/files/"
  />

  <repository 
    type="tarball" 
    name="github" 
    href="http://github.com/"
  />

  <repository 
    type="tarball" 
    name="openjpeg" 
    href="http://github.com/uclouvain/openjpeg/archive/"
  />

  <repository 
    type="tarball" 
    name="webp" 
    href="http://downloads.webmproject.org/releases/webp/"
  />

  <repository 
    type="tarball" 
    name="gnu" 
    href="ftp://ftp.gnu.org/pub/gnu/"
  />

  <repository 
    type="tarball" 
    name="checkout" 
    href="file:///home/john/GIT/build-win32/master/checkout"
  />

  <repository 
    type="tarball" 
    name="gnome" 
    href="http://ftp.gnome.org/pub/GNOME/sources/"
  />
  
  <repository
    type="tarball"
    name="sqlite3"
    href="http://www.sqlite.org/"
  />

  <repository
    type="tarball"
    name="zlib"
    href="https://zlib.net/"
  />

  <!-- the zlib configure is a bit basic and does not support
       cross-compiling, so use cmake 

       zlib will make libzlib.dll, but we want libz.dll, so we must 
       patch CMakeLists.txt

    -->

  <cmake id="zlib"
    cmakeargs="-DCMAKE_TOOLCHAIN_FILE=$BASEDIR/Toolchain-x86_64-w32-mingw32.cmake"
    use-ninja="False"
    >
    <branch
      repo="zlib"
      module="zlib-1.2.11.tar.gz"
      version="1.2.11"
      >
      <patch file="patches/zlib-name.patch" strip="1"/>
    </branch>
  </cmake>

  <autotools id="libiconv" 
    autogen-sh="configure"
    >
    <branch
      repo="gnu"
      module="libiconv/libiconv-1.15.tar.gz"
      version="1.15"
    />
  </autotools>

  <!-- gettext 0.19.8 fails to build on 18.04 with mysterious symbol 
       errors ... use an old binary version instead

       it works fine with a 64-bit Windows target, very odd

    -->

  <autotools id="expat" 
    autogen-sh="configure"
    >
    <branch
      repo="sourceforge"
      module="expat/expat-2.2.6.tar.bz2"
      version="2.2.6"
    />
    <dependencies>
      <dep package="zlib"/>
      <dep package="libiconv"/>
    </dependencies>
  </autotools>

  <autotools id="freetype"
    autogen-sh="configure"
    autogenargs="--enable-static"
    >
    <branch 
      repo="nongnu"
      module="freetype/freetype-2.9.1.tar.gz"
      version="2.9.1"
    />
    <dependencies>
      <dep package="expat"/>
    </dependencies>
  </autotools>

  <!-- icu will pull in standard linux headers, which we don't want

       we are forced to use an old pango for gtk+-2, so we don't use harfbuzz

    -->

  <autotools id="harfbuzz"
    autogen-sh="configure"
    autogenargs="--with-icu=no"
    >
    <branch 
      repo="freedesktop.org"
      module="harfbuzz/release/harfbuzz-1.8.8.tar.bz2"
      version="1.8.8"
    />
    <dependencies>
      <dep package="glib"/>
      <dep package="libiconv"/>
      <dep package="expat"/>
      <dep package="freetype"/>
      <dep package="cairo"/>
      <dep package="fontconfig"/>
    </dependencies>
  </autotools>

  <!-- 2.12.3 fails with a gperf problem

       the -march flag stops fontconfig using build system arch flags
       for the target

    -->

  <autotools id="fontconfig"
    autogen-sh="configure"
    makeargs="CFLAGS=-march=i686"
    >
    <branch 
      repo="freedesktop.org"
      module="fontconfig/release/fontconfig-2.12.6.tar.gz"
      version="2.12.6"
    />
    <dependencies>
      <dep package="libiconv"/>
      <dep package="libpng"/>
      <dep package="expat"/>
      <dep package="freetype"/>
    </dependencies>
  </autotools>

  <autotools id="libxml2" 
    autogen-sh="configure"
    autogenargs="--without-python">
    >
    <branch
      repo="xmlsoft"
      module="libxml2/libxml2-2.9.8.tar.gz"
      version="2.9.8"
    />
    <dependencies>
      <dep package="libiconv"/>
    </dependencies>
  </autotools>

  <autotools id="libpng" 
    autogen-sh="configure"
    >
    <branch
      repo="sourceforge"
      module="libpng/libpng-1.6.30.tar.gz"
      version="1.6.30"
    />
    <dependencies>
      <dep package="zlib"/>
    </dependencies>
  </autotools>

  <!-- giflib does not automatically open binary when cross-compiling

    -->

  <autotools id="giflib" 
    autogen-sh="configure"
    makeargs="CFLAGS=-D_OPEN_BINARY"
    >
    <branch
      repo="sourceforge"
      module="giflib/giflib-5.1.4.tar.gz"
      version="5.1.4"
    />
  </autotools>

  <autotools id="libcroco" 
    autogen-sh="configure"
    supports-non-srcdir-builds="no"
    >
    <pkg-config>libcroco-0.6.pc</pkg-config>
    <branch
      repo="gnome"
      module="libcroco/0.6/libcroco-0.6.12.tar.xz"
      version="0.6.12">
    </branch>
    <dependencies>
      <dep package="glib"/>
      <dep package="libxml2"/>
    </dependencies>
  </autotools>

  <!-- 2.40.19 needs pangocairo >= 1.38.0

       we are forced onto pango 1.27, so we need an older rsvg

    -->

  <autotools id="librsvg" 
    autogen-sh="configure"
    supports-non-srcdir-builds="no"
    autogenargs="--disable-introspection --disable-pixbuf-loader">
    >
    <branch
      repo="gnome"
      module="librsvg/2.31/librsvg-2.31.0.tar.gz"
      version="2.31.0">
    </branch>
    <dependencies>
      <dep package="glib"/>
      <dep package="gdk-pixbuf"/>
      <dep package="libcroco"/>
      <dep package="pango"/>
    </dependencies>
  </autotools>

  <!-- here's one for poppler 0.62, but it fails cross-compiling with a
       mysterious c++ link error, probably the same thing that affects 
       current openjpeg, see below

  <cmake id="poppler"
    cmakeargs="-D CMAKE_TOOLCHAIN_FILE=$BASEDIR/Toolchain-x86_64-w32-mingw32.cmake -D FONT_CONFIGURATION=win32 -D ENABLE_XPDF_HEADERS=OFF -D ENABLE_SPLASH=OFF -D ENABLE_GLIB=ON -D ENABLE_UTILS=OFF -D ENABLE_CPP=OFF"
    use-ninja="False"
    >
    <pkg-config>poppler-glib.pc</pkg-config>
    <branch repo="poppler.freedesktop.org"
            module="poppler-0.62.0.tar.xz"
            version="0.62.0"
      />
    <dependencies>
      <dep package="cairo"/>
      <dep package="openjpeg"/>
      <dep package="glib"/>
    </dependencies>
    <after>
      <dep package="gdk-pixbuf"/>
    </after>
  </cmake>

    -->

  <!-- -fpermissive or g++ complains about int->enum conversions

    -->

  <autotools id="poppler" 
    autogen-sh="configure"
    autogenargs="--with-font-configuration=win32 --disable-xpdf-headers --disable-splash-output --enable-poppler-glib --disable-gtk-test --disable-utils --disable-poppler-cpp" 
    makeargs="CXXFLAGS=-fpermissive POPPLER_GLIB_DISABLE_DEPRECATED="
    >
    <pkg-config>poppler-glib.pc</pkg-config>
    <branch repo="poppler.freedesktop.org"
            module="poppler-0.46.0.tar.xz"
            version="0.46.0"
      />
    <dependencies>
      <dep package="cairo"/>
      <dep package="openjpeg"/>
      <dep package="glib"/>
    </dependencies>
    <after>
      <dep package="gdk-pixbuf"/>
    </after>
  </autotools>

  <autotools id="fftw3" 
    autogen-sh="configure"
    autogenargs="--disable-static --enable-shared --disable-threads"
    >
    <branch
      repo="fftw"
      module="fftw-3.3.7.tar.gz"
      version="3.3.7"
    />
  </autotools>

  <autotools id="lcms" 
    autogen-sh="configure"
    >
    <branch
      repo="sourceforge"
      module="lcms/lcms2-2.9.tar.gz"
      version="2.9"
    />
  </autotools>

  <!-- needed by openslide

       openjpeg 2.1 does not make or install a .pc file, we copy one in earlier
       during unpack.sh

       BASEDIR is set for us by build.sh

    -->

  <cmake id="openjpeg"
    cmakeargs="-DBUILD_PKGCONFIG_FILES=ON -DCMAKE_TOOLCHAIN_FILE=$BASEDIR/Toolchain-x86_64-w32-mingw32.cmake"
    use-ninja="False"
    >
    <branch 
      repo="openjpeg"
      module="v2.1.1.tar.gz"
      checkoutdir="openjpeg-2.1"
      version="2.1"
    />
    <dependencies>
      <dep package="lcms"/>
      <dep package="tiff"/>
    </dependencies>
  </cmake>

  <!-- starting in openslide-3.4.0, sqlite3 is a requirement.

    -->

  <autotools id="sqlite3"
    autogen-sh="configure"
    >
    <branch
      repo="sqlite3"
      module="2018/sqlite-autoconf-3220000.tar.gz"
      version="3.22.0"
    />
    <dependencies>
    </dependencies>
  </autotools>

  <autotools id="openslide" 
    autogen-sh="configure"
    >
    <branch
      repo="github"
      module="openslide/openslide/releases/download/v3.4.1/openslide-3.4.1.tar.gz"
      version="3.4.1"
      >
    </branch>
    <dependencies>
      <dep package="cairo"/>
      <dep package="gdk-pixbuf"/>
      <dep package="openjpeg"/>
      <dep package="sqlite3"/>
    </dependencies>
  </autotools>

  <!-- the turbo one is 2x to 4x faster 

       the patch changes the "typedef int boolean" that libjpeg-turbo 
       provides, it causes problems later on for imagemagick

       without-turbojpeg turns off a library we don't use (we just use the 
       libjpeg API)

    -->

  <autotools id="libjpeg-turbo" 
    autogen-sh="configure"
    autogenargs="--without-turbojpeg"
    >
    <branch
      repo="sourceforge"
      module="libjpeg-turbo/1.5.3/libjpeg-turbo-1.5.3.tar.gz"
      version="1.5.3"
      >
      <patch file="patches/libjpeg-turbo-bool.patch" strip="1"/>
    </branch>
    <dependencies>
      <dep package="zlib"/>
    </dependencies>
  </autotools>

  <!-- openexr does not work with mingw, it becomes very confused re.
       threading -->

  <!-- the patch sanity checks the shutter speed and stops pow(2, -inf), which
       causes an uncaught math exception on mingw -->

  <autotools id="libexif" 
    autogen-sh="configure"
    >
    <branch
      repo="sourceforge"
      module="libexif/libexif-0.6.21.tar.gz"
      version="0.6.21"
      >
      <patch file="patches/libexif-0.6-shutter.patch" strip="1"/>
    </branch>
  </autotools>

  <!-- the tiff on the gnome site needs a confusing libjpeg DLL, 
       make our own  

       tiff 4.0.3 fails to build a C++ DLL with:

       i686-w64-mingw32-g++: error: unrecognized option 
       		'-enable-auto-image-base'

       disable the C++ API for now, we don't use it anyway

    -->

  <autotools id="tiff" 
    autogen-sh="configure"
    autogenargs="--disable-cxx"
    >
    <branch
      repo="tiff"
      module="tiff-4.0.9.tar.gz"
      version="4.0.9"
      >
    </branch>
    <dependencies>
      <dep package="libjpeg-turbo"/>
    </dependencies>
  </autotools>

  <!-- libMagick++.dll fails to link due to some exception problem, disable it

       disable largefile support, we rely on vips for that and ImageMagick's 
       detection does not work when cross-compiling

       disable openmp, ubuntu 14.04 mingw has a broken libgomp

       6.9.0-10 and later don't build under mingw

       6.9.2-3 confirmed to also fail, some sort of locale issue

       6.9.3-10 and later use intsafe.h which does not yet have an 
       implementation on mingw

       since we are forced to use a very old version, don't use vips + IM on 
       Windows if you are at all concerned about security :( 

    -->

  <autotools id="imagemagick" 
    autogen-sh="configure"
    autogenargs="--without-threads --without-x --with-modules=no --with-openexr=no --without-gvc --without-lqr --without-magick-plus-plus --disable-largefile --without-rsvg --disable-openmp"
    >
    <branch
      repo="magick"
      module="ImageMagick-6.8.9-10.tar.xz"
      version="6.8.9"
    />
    <dependencies>
      <dep package="lcms"/>
      <dep package="fftw3"/>
      <dep package="tiff"/>
      <dep package="libjpeg-turbo"/>
    </dependencies>
  </autotools>

  <!-- the orc stuff we use needs 64-bit SSE, so we can't use it under 
       windows -->

  <autotools id="orc-0.4" 
    autogen-sh="configure"
    >
    <branch
      repo="orc"
      module="orc-0.4.28.tar.gz"
      version="0.4.28"
    />
  </autotools>

  <!-- cfitsio can't make a .dll with mingw ... only include it in nip2 builds 
       where we don't care about making a libvips.dll

    -->

  <autotools id="cfitsio" 
    autogen-sh="configure"
    autogenargs="--disable-hera --without-gsiftp"
    >
    <branch
      repo="cfitsio"
      module="cfitsio3430.tar.gz"
      version="3.43"
      checkoutdir="cfitsio"
      >
    </branch>
    <dependencies>
      <dep package="zlib"/>
    </dependencies>
  </autotools>

  <autotools id="webp" 
    autogen-sh="configure"
    autogenargs="--enable-libwebpmux --enable-libwebpdemux"
    >
    <branch
      repo="webp"
      module="libwebp-1.0.0.tar.gz"
      version="1.0.0"
      >
    </branch>
    <dependencies>
      <dep package="libpng"/>
      <dep package="libjpeg-turbo"/>
      <dep package="giflib"/>
      <dep package="tiff"/>
    </dependencies>
  </autotools>

  <autotools id="libffi"
    autogen-sh="configure"
    >
    <branch
      repo="sourceware"
      module="libffi/libffi-3.2.1.tar.gz"
      version="3.2.1"
      >
    </branch>
  </autotools>

  <!-- don't do any of doc stuff

       we need an old version of glib or atk compile will fail later

       2.36 fails needing automake 1.13

       disable warnings or compile will fail with a win32 target

    -->

  <autotools id="glib" 
    autogen-sh="configure"
    autogenargs="--with-pcre=internal"
    makeargs="CFLAGS=-w"
    >
    <branch
      repo="gnome"
      module="glib/2.40/glib-2.40.2.tar.xz"
      version="2.40.2"
      >
    </branch>
    <dependencies>
      <dep package="zlib"/>
      <dep package="libffi"/>
    </dependencies>
  </autotools>

  <autotools id="pixman" 
    autogen-sh="configure"
    >
    <branch 
      repo="cairo" 
      module="pixman-0.34.0.tar.gz"
      version="0.34.0"
      >
    </branch>
  </autotools>

  <!-- 1.14.4 fails to build in a cross-compiler

       openslide needs the pdf backend

    -->

  <autotools id="cairo" 
    autogen-sh="configure"
    autogenargs="--disable-gl --disable-xlib --disable-xcb --enable-win32 --without-x --disable-script"
    >
    <branch 
      repo="cairo" 
      module="cairo-1.14.12.tar.xz"
      version="1.14.12"
      >
    </branch>
    <dependencies>
      <dep package="fontconfig"/>
      <dep package="freetype"/>
      <dep package="glib"/>
      <dep package="pixman"/>
      <dep package="libpng"/>
    </dependencies>
  </autotools>

  <!-- 1.40.14 needs a newer glib than we can use

       1.30.2 fails to build under mingw due to a _snprintf conflict

       1.20.5 is too old for gtk+-2, missing pango_font_map_create_context

       1.25.6 fails with "flexible array member in union" ... it's using a 
       gcc extension which gcc6 bans

       1.27.1 fails with the _snprintf error

       1.26.2 fails with the _snprintf error

	patch: remove 

		#define snprintf _snprintf

	from pango/opentype/hb-private.h

       rsvg 2.40.19 needs pangocairo >= 1.38.0

       pango 1.38 needs harfbuzz to make pangoft2, and we need pangoft2

       1.27.1 plus the snprintf patch makes pangoft2 correctly

       with-dynamic-modules=no to stop pango loading modules at runtime:
       these are hard to relocate

    -->

  <autotools id="pango" 
    autogen-sh="configure"
    autogenargs="--with-cairo --disable-introspection --with-included-modules=yes --with-dynamic-modules=no"
    >
    <branch
      repo="gnome"
      module="pango/1.27/pango-1.27.1.tar.gz"
      version="1.27.1"
      >
      <patch file="patches/pango-snprintf.patch" strip="1"/>
    </branch>
    <dependencies>
      <dep package="glib"/>
      <dep package="cairo"/>
      <dep package="freetype"/>
    </dependencies>
  </autotools>

  <!-- don't build from git ... it does some introspection to build the test
       suite build files, which won't work in cross-compiler mode

       disable run-time loading of modules, it's difficult when cross-compiling

       2.36.0 fails with our ancient glib

    -->

  <autotools id="gdk-pixbuf"
    autogen-sh="configure"
    autogenargs="--disable-introspection --disable-installed-tests --disable-always-build-tests --disable-glibtest --with-included-loaders=png,gdip-jpeg"
    >
    <branch
      repo="gnome"
      module="gdk-pixbuf/2.25/gdk-pixbuf-2.25.2.tar.xz"
      version="2.25.2"
      >
    </branch>
    <dependencies>
      <dep package="glib"/>
      <dep package="libjpeg-turbo"/>
      <dep package="tiff"/>
      <dep package="libpng"/>
    </dependencies>
  </autotools>

  <autotools id="libgsf"
    autogen-sh="configure"
    makeargs="CFLAGS=-O2"
    >
    <branch
      repo="gnome"
      module="libgsf/1.14/libgsf-1.14.42.tar.xz"
      version="1.14.42"
      >
    </branch>
  </autotools>

  <!-- use matio without hdf5, see above

       1.5.6 fails to build with gcc 7.3 with "missing matio.sym"

       1.5.8+ fails to build in a cross-compiler (the test for va_copy fails)

       so sadly we have to say goodbye to matio

    -->

  <autotools id="matio"
    autogen-sh="configure"
    >
    <branch 
      repo="sourceforge"
      module="matio/matio-1.5.6.tar.gz"
      version="1.5.6"
    />
    <dependencies>
    </dependencies>
  </autotools>

  <!-- openexr has problems on win
  
       cfitsio cannot make a .dll with mingw, only include it if you must 
       have it

       the transform patch is some non-LGPL code we paste into binaries 

       orc needs 64-bit SSE, so we can't use it under windows

       introspection won't work cross-platform since we can't easily run our
       objects ... fix this by including the typelibs in the dist later

       use -O3 to turn on the auto vectorizer, this gives a useful speedup in 
       7.38 and later

    -->

  <autotools id="libvips"
    autogen-sh="configure"
    autogenargs="--enable-debug=no --without-OpenEXR --disable-introspection "
    makeargs="CFLAGS=-O3 CXXFLAGS=-O3"
    >

    <branch
      repo="vips"
      module="v8.7.0-rc2/vips-8.7.0-rc2.tar.gz"
      version="8.7.0"
      checkoutdir="vips-8.7.0"
      >
      <patch file="file:///home/john/develop/transform-7.32/transform.patch" strip="1"/>
    </branch>

    <dependencies>
      <dep package="webp"/>
      <dep package="librsvg"/>
      <dep package="giflib"/>
      <dep package="poppler"/>
      <dep package="glib"/>
      <dep package="pango"/>
      <dep package="fftw3"/>
      <dep package="libgsf"/>
      <dep package="libjpeg-turbo"/>
      <dep package="tiff"/>
      <dep package="openslide"/>
      <dep package="lcms"/>
      <dep package="libexif"/>
      <dep package="imagemagick"/>
      <dep package="libpng"/>
    </dependencies>
  </autotools>

  <autotools id="gsl" 
    autogen-sh="configure"
    >
    <branch
      repo="gnu"
      module="gsl/gsl-1.16.tar.gz"
      version="1.16"
    />
  </autotools>

  <!-- 1.32.0 fails with our old glib, G_CONST_RETURN

       1.26.0 fails with our old glib, G_CONST_RETURN

       1.19.6 fails with our old glib, G_CONST_RETURN

       1.91.92 fails with our old glib, G_CONST_RETURN

    -->

  <autotools id="atk"
    >
    <branch 
      repo="gnome"
      module="atk/2.11/atk-2.11.92.tar.xz"
      version="2.11.92"
    />
    <dependencies>
      <dep package="glib"/>
    </dependencies>
  </autotools>

  <autotools id="gtk+"
    autogen-sh="configure"
    >
    <branch 
      repo="gnome"
      module="gtk+/2.24/gtk+-2.24.32.tar.xz"
      version="2.24.32"
    />
    <dependencies>
      <dep package="glib"/>
      <dep package="pango"/>
      <dep package="cairo"/>
      <dep package="gdk-pixbuf"/>
      <dep package="atk"/>
    </dependencies>
  </autotools>

  <!-- our own goffice module

       0.9.x is gtk3, we are stuck with gtk2 for now, so we need the 0.8.x 
       series

       in ubuntu 12.04, goffice-0.8.17 crashes with -O2, make sure that's off 
       in jhbuildrc when you make this module, see the README

       this compiler bug fixed in 12.10

       the patch helps goffice find the pcre support in recent glibs

    -->

  <autotools id="goffice-noprint"
    autogen-sh="configure"
    autogenargs="--with-config-backend=win32"
    >
    <branch
      repo="gnome"
      module="goffice/0.8/goffice-0.8.17.tar.xz"
      version="0.8.17">
      <patch file="patches/goffice-0.8-glib-pcre.patch" strip="1"/>
    </branch>
  </autotools>

  <!-- fails linking 
       
       add -liberty to get regcomp() and friends 

       edit lib/gvc/Makefile.am, append -liberty toi line 69

       edit lib/gvpr/gprstate.c, remove WIN32 stuff

       gvrender_core_dot.c fails with a variety of linking errors

    -->

  <autotools id="graphviz"
    autogen-sh="configure"
    autogenargs="--enable-swig=no --enable-sharp=no --enable-guile=no --enable-java=no--enable-io=no --enable-lua=no --enable-ocaml=no --enable-perl=no --enable-php=no --enable-python=no --enable-r=no --enable-ruby=no --enable-tcl=no --with-rsvg=no --with-ghostscript=no"
    >
    <branch
      repo="graphviz"
      module="graphviz-2.28.0.tar.gz"
      version="2.28.0">
    </branch>
  </autotools>

  <!-- our theme ... disable all but clearlooks 

       2.20.x is the last one that works with gtk2

    -->

  <autotools id="gtkengines"
    autogen-sh="configure"
    autogenargs="--disable-crux --disable-hc --disable-industrial --disable-mist --disable-redmond --disable-glide --disable-thinice"
    >
    <branch
      repo="gnome"
      module="gtk-engines/2.20/gtk-engines-2.20.2.tar.gz"
      version="2.20.2"
    />
  </autotools>

  <autotools id="nip2" 
    autogen-sh="configure"
    autogenargs="--enable-debug=no --without-libgvc"
    >
    <branch
      repo="nip2"
      module="v8.7.0-rc2/nip2-8.7.0-rc2.tar.gz"
      version="8.7.0"
      checkoutdir="nip2-8.7.0"
    />
    <dependencies>
      <dep package="gtk+"/>
      <dep package="libvips"/>
      <dep package="gsl"/>
      <dep package="goffice-noprint"/>
      <dep package="gtkengines"/>
    </dependencies>
  </autotools>

  <autotools id="ptmfit" 
    autogen-sh="configure"
    >
    <branch
      repo="checkout"
      module="ptmfit-2.3.tar.gz"
      version="2.3"
    />
    <dependencies>
      <dep package="libvips"/>
    </dependencies>
  </autotools>

  <autotools id="uriparser" 
    autogen-sh="configure"
    autogenargs="--disable-test"
    >
    <branch
      repo="sourceforge"
      module="uriparser/uriparser-0.7.7.tar.bz2"
      version="0.7.7"
    />
  </autotools>

  <autotools id="tilesrv" 
    autogen-sh="configure"
    >
    <branch
      repo="checkout"
      module="tilesrv-1.0.tar.gz"
      version="1.0"
    />
    <dependencies>
      <dep package="libvips"/>
      <dep package="uriparser"/>
    </dependencies>
  </autotools>

</moduleset>


# -*- mode: python -*-
# This code is licensed under the GPLv2 License
# Derived work from the original freedesktop.org example.jhbuildrc
#
# This jhbuildrc file is created for the purpose of cross compile Gtk+
# with Mingw32 under Linux.
#
# Author: Alberto Ruiz <aruiz@gnome.org>

# checkoutroot: path to download packages elsewhere
# prefix:       target path to install the compiled binaries
basedir = os.path.expanduser('~/dev/vips-win32/7.24')
checkoutroot = os.path.join(os.sep, basedir, 'checkout')
prefix = os.path.join(os.sep, basedir, 'inst')
os.environ['prefix'] = prefix

#The host value is obtained with the result of executing
#the config.guess script on any of the packages.
#This value must be valid for most linux/x86 out there
os.environ['HOST'] = 'i686-pc-linux-gnu'
os.environ['TARGET'] = 'i586-pc-mingw32'

# .pc files from binary packages have something like 
#     prefix=c:/devel/target/f3002dbeeb43fd4ea5385fb6fa4de06f
# at the top ... we need to override this prefix with our own
# don't use "--define-variable=prefix=/poop", pkg-config gets confused
os.environ['PKG_CONFIG'] = '/usr/bin/pkg-config --define-variable prefix=' + prefix

# try to stop our enclsong pkg path getting in
# basedir/lib/pkgconfig is added for us later
os.environ['PKG_CONFIG_PATH'] = ''

# addpath('PKG_CONFIG_PATH', os.path.join(os.sep, 'usr', 'lib', 'pkgconfig'))
# addpath('PKG_CONFIG_PATH', os.path.join(os.sep, 'usr', 'share', 'pkgconfig'))

# Prefix for all the tools
# mingw_tool_prefix = '/home/john/mingw/mingw32/bin/i586-pc-mingw32-'
# mingw_tool_prefix = '/home/john/packages/mingw/mingw32/bin/i586-pc-mingw32-'

# the official debian package names them strangly
mingw_tool_prefix = 'i586-mingw32msvc-'

mingw_tools = {'ADDR2LINE': 'addr2line',
	'AS': 'as', 'CC': 'gcc', 'CPP': 'cpp',
	'CPPFILT': 'c++filt', 'CXX': 'g++',
	'DLLTOOL': 'dlltool', 'DLLWRAP': 'dllwrap',
	'GCOV': 'gcov', 'LD': 'ld', 'NM': 'nm',
	'OBJCOPY': 'objcopy', 'OBJDUMP': 'objdump',
	'READELF': 'readelf', 'SIZE': 'size',
	'STRINGS': 'strings', 'WINDRES': 'windres',
	'AR': 'ar', 'RANLIB': 'ranlib', 'STRIP': 'strip'}

#Exporting all as environment variables with its prefix
mingw_tools_args = str()
for tool in mingw_tools.keys():
	fullpath_tool = mingw_tool_prefix + mingw_tools[tool]
	os.environ[tool] = fullpath_tool

#Added another common env var name for windres
os.environ['RC'] = os.environ['WINDRES']

#Exporting tool flags enviroment variables
os.environ['LDFLAGS']  = '-mno-cygwin -L'+prefix+'/lib'
os.environ['CFLAGS']   = '-mno-cygwin -mms-bitfields -march=i686 -I'+prefix+'/include'
os.environ['CPPFLAGS'] = '-I'+prefix+'/include'
os.environ['CXXFLAGS'] = '-mno-cygwin -mms-bitfields -march=i686'
os.environ['ARFLAGS']  = '-ar rcs'
os.environ['INSTALL']  = os.path.expanduser('~/bin/install-check')

# turn on the optimiser
os.environ['CFLAGS']   += ' -O2 '
os.environ['CXXFLAGS']   += ' -O2 '

# turn on debugging
# os.environ['CFLAGS']   += ' -g '
# os.environ['CXXFLAGS']   += ' -g '

#Populating autogenargs
autogenargs  = ' --build='+os.environ['HOST']
autogenargs += ' --host='+os.environ['TARGET']
autogenargs += ' --target='+os.environ['TARGET']
autogenargs += ' --disable-docs'
autogenargs += ' --disable-debug'
autogenargs += ' --enable-all-warnings --enable-maintainer-mode'

for tool in ('AR', 'RANLIB', 'STRIP', 'AS',
	     'DLLTOOL', 'OBJDUMP', 'NM', 'WINDRES'):
	autogenargs += ' '+tool+'="'+os.environ[tool]+'" '

#Module specific configure arguments


module_autogenargs['pango'] =   autogenargs + """ --disable-gtk-doc \
                                                  --enable-explicit-deps=no \
                                                  --with-included-modules"""

module_autogenargs['pkg-config'] = autogenargs + " --without-installed-glib"

module_autogenargs['atk'] =     autogenargs + """     --disable-glibtest \
                                                  --disable-scrollkeeper \
                                                  --disable-gtk-doc"""

module_autogenargs['gtk+'] =    autogenargs + """ --disable-glibtest --disable-scrollkeeper \
                                                  --disable-gtk-doc --with-included-modules \
                                                  --disable-gtk-doc --without-libtiff"""

# we generare 32-bit binaries when cross-compiling
use_lib64 = False

# we just want the local ones
use_local_modulesets = True

# only rebuild on a change
#build_policy = "updated-deps"

